
//#define DONT_USE_GENERATE_CODE                                                                 
//------------------------------------------------------------------------------                 
// <auto-generated>                                                                              
//     This code was generated by Lockstep.CodeGenerator                                         
//                                                                                               
//     Changes to this file may cause incorrect behavior and will be lost if                     
//     the code is regenerated.                                                                  
//     https://github.com/JiepengTan/LockstepPlatform                                            
// </auto-generated>                                                                             
//------------------------------------------------------------------------------                 
                                                                                                 
using Lockstep.Serialization;                                                                    
namespace Lockstep.Game{                                                                            
#if !DONT_USE_GENERATE_CODE                                                                      

    public partial class Enemy :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(PrefabId);
			writer.Write(curHealth);
			writer.Write(damage);
			writer.Write(isFire);
			writer.Write(isInvincible);
			writer.Write(maxHealth);
			writer.Write(moveSpd);
			writer.Write(turnSpd);
			writer.WriteBackup(animator);
			writer.WriteBackup(brain);
			writer.WriteBackup(colliderData);
			writer.WriteBackup(rigidbody);
			writer.WriteBackup(skillBox);
			writer.WriteBackup(transform);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			PrefabId = reader.ReadInt32();
			curHealth = reader.ReadInt32();
			damage = reader.ReadInt32();
			isFire = reader.ReadBoolean();
			isInvincible = reader.ReadBoolean();
			maxHealth = reader.ReadInt32();
			moveSpd = reader.ReadLFloat();
			turnSpd = reader.ReadLFloat();
			animator = reader.ReadBackup(ref this.animator);
			brain = reader.ReadBackup(ref this.brain);
			colliderData = reader.ReadBackup(ref this.colliderData);
			rigidbody = reader.ReadBackup(ref this.rigidbody);
			skillBox = reader.ReadBackup(ref this.skillBox);
			transform = reader.ReadBackup(ref this.transform);                                                                                     
       }                                                                                            
    }                                                                                              

    public partial class Player :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(PrefabId);
			writer.Write(curHealth);
			writer.Write(damage);
			writer.Write(isFire);
			writer.Write(isInvincible);
			writer.Write(localId);
			writer.Write(maxHealth);
			writer.Write(moveSpd);
			writer.Write(turnSpd);
			writer.WriteBackup(animator);
			writer.WriteBackup(colliderData);
			writer.WriteBackup(input);
			writer.WriteBackup(mover);
			writer.WriteBackup(rigidbody);
			writer.WriteBackup(skillBox);
			writer.WriteBackup(transform);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			PrefabId = reader.ReadInt32();
			curHealth = reader.ReadInt32();
			damage = reader.ReadInt32();
			isFire = reader.ReadBoolean();
			isInvincible = reader.ReadBoolean();
			localId = reader.ReadInt32();
			maxHealth = reader.ReadInt32();
			moveSpd = reader.ReadLFloat();
			turnSpd = reader.ReadLFloat();
			animator = reader.ReadBackup(ref this.animator);
			colliderData = reader.ReadBackup(ref this.colliderData);
			input = reader.ReadBackup(ref this.input);
			mover = reader.ReadBackup(ref this.mover);
			rigidbody = reader.ReadBackup(ref this.rigidbody);
			skillBox = reader.ReadBackup(ref this.skillBox);
			transform = reader.ReadBackup(ref this.transform);                                                                                     
       }                                                                                            
    }                                                                                              

    public partial class Spawner :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.WriteBackup(info);
                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			info = reader.ReadBackup(ref this.info);
                                                                                     
       }                                                                                            
    }                                                                                              
                                                                              
#endif                                                                                           
}                                                                                               