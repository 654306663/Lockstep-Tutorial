
//#define DONT_USE_GENERATE_CODE                                                                 
//------------------------------------------------------------------------------                 
// <auto-generated>                                                                              
//     This code was generated by Lockstep.CodeGenerator                                         
//                                                                                               
//     Changes to this file may cause incorrect behavior and will be lost if                     
//     the code is regenerated.                                                                  
//     https://github.com/JiepengTan/LockstepPlatform                                            
// </auto-generated>                                                                             
//------------------------------------------------------------------------------                 
                                                                                                 
using Lockstep.Serialization;                                                                    
using Lockstep.Game;                                                                    
using Lockstep.Collision2D;
using Lockstep.Math;

#if !DONT_USE_GENERATE_CODE                                                                      

namespace Lockstep.Game{                                                                                               
    public partial class CAnimator :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(_animLen);
			writer.Write(_curAnimIdx);
			writer.Write(_curAnimName);
			writer.Write(_timer);
			writer.Write(configId);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			_animLen = reader.ReadLFloat();
			_curAnimIdx = reader.ReadInt32();
			_curAnimName = reader.ReadString();
			_timer = reader.ReadLFloat();
			configId = reader.ReadInt32();                                                                                     
       }                                                                                            
    }                                                               
}                                                              

namespace Lockstep.Game{                                                                                               
    public partial class CBrain :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(atkInterval);
			writer.Write(stopDistSqr);
			writer.Write(targetId);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			atkInterval = reader.ReadLFloat();
			stopDistSqr = reader.ReadLFloat();
			targetId = reader.ReadInt32();                                                                                     
       }                                                                                            
    }                                                               
}                                                              

namespace Lockstep.Game{                                                                                               
    public partial class CMover :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(hasReachTarget);
			writer.Write(needMove);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			hasReachTarget = reader.ReadBoolean();
			needMove = reader.ReadBoolean();                                                                                     
       }                                                                                            
    }                                                               
}                                                              

namespace Lockstep.Game{                                                                                               
    public partial class CRigidbody :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(Mass);
			writer.Write(Speed);
			writer.Write(isEnable);
			writer.Write(isOnFloor);
			writer.Write(isSleep);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			Mass = reader.ReadLFloat();
			Speed = reader.ReadLVector3();
			isEnable = reader.ReadBoolean();
			isOnFloor = reader.ReadBoolean();
			isSleep = reader.ReadBoolean();                                                                                     
       }                                                                                            
    }                                                               
}                                                              

namespace Lockstep.Collision2D{                                                                                               
    public partial class CTransform2D :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(deg);
			writer.Write(pos);
			writer.Write(y);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			deg = reader.ReadLFloat();
			pos = reader.ReadLVector2();
			y = reader.ReadLFloat();                                                                                     
       }                                                                                            
    }                                                               
}                                                              

namespace Lockstep.Collision2D{                                                                                               
    public partial class ColliderData :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(deg);
			writer.Write(high);
			writer.Write(pos);
			writer.Write(radius);
			writer.Write(size);
			writer.Write(up);
			writer.Write(y);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			deg = reader.ReadLFloat();
			high = reader.ReadLFloat();
			pos = reader.ReadLVector2();
			radius = reader.ReadLFloat();
			size = reader.ReadLVector2();
			up = reader.ReadLVector2();
			y = reader.ReadLFloat();                                                                                     
       }                                                                                            
    }                                                               
}                                                              

namespace Lockstep.Game{                                                                                               
    public partial class Enemy :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(EntityId);
			writer.Write(PrefabId);
			writer.Write(curHealth);
			writer.Write(damage);
			writer.Write(isFire);
			writer.Write(isInvincible);
			writer.Write(maxHealth);
			writer.Write(moveSpd);
			writer.Write(turnSpd);
			animator.WriteBackup(writer);
			brain.WriteBackup(writer);
			colliderData.WriteBackup(writer);
			rigidbody.WriteBackup(writer);
			skillBox.WriteBackup(writer);
			transform.WriteBackup(writer);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			EntityId = reader.ReadInt32();
			PrefabId = reader.ReadInt32();
			curHealth = reader.ReadInt32();
			damage = reader.ReadInt32();
			isFire = reader.ReadBoolean();
			isInvincible = reader.ReadBoolean();
			maxHealth = reader.ReadInt32();
			moveSpd = reader.ReadLFloat();
			turnSpd = reader.ReadLFloat();
			animator.ReadBackup(reader);
			brain.ReadBackup(reader);
			colliderData.ReadBackup(reader);
			rigidbody.ReadBackup(reader);
			skillBox.ReadBackup(reader);
			transform.ReadBackup(reader);                                                                                     
       }                                                                                            
    }                                                               
}                                                              

namespace Lockstep.Game{                                                                                               
    public partial class Player :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(EntityId);
			writer.Write(PrefabId);
			writer.Write(curHealth);
			writer.Write(damage);
			writer.Write(isFire);
			writer.Write(isInvincible);
			writer.Write(localId);
			writer.Write(maxHealth);
			writer.Write(moveSpd);
			writer.Write(turnSpd);
			animator.WriteBackup(writer);
			colliderData.WriteBackup(writer);
			input.WriteBackup(writer);
			mover.WriteBackup(writer);
			rigidbody.WriteBackup(writer);
			skillBox.WriteBackup(writer);
			transform.WriteBackup(writer);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			EntityId = reader.ReadInt32();
			PrefabId = reader.ReadInt32();
			curHealth = reader.ReadInt32();
			damage = reader.ReadInt32();
			isFire = reader.ReadBoolean();
			isInvincible = reader.ReadBoolean();
			localId = reader.ReadInt32();
			maxHealth = reader.ReadInt32();
			moveSpd = reader.ReadLFloat();
			turnSpd = reader.ReadLFloat();
			animator.ReadBackup(reader);
			colliderData.ReadBackup(reader);
			input.ReadBackup(reader);
			mover.ReadBackup(reader);
			rigidbody.ReadBackup(reader);
			skillBox.ReadBackup(reader);
			transform.ReadBackup(reader);                                                                                     
       }                                                                                            
    }                                                               
}                                                              

namespace Lockstep.Game{                                                                                               
    public partial class PlayerInput :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(inputUV);
			writer.Write(isInputFire);
			writer.Write(isSpeedUp);
			writer.Write(mousePos);
			writer.Write(skillId);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			inputUV = reader.ReadLVector2();
			isInputFire = reader.ReadBoolean();
			isSpeedUp = reader.ReadBoolean();
			mousePos = reader.ReadLVector2();
			skillId = reader.ReadInt32();                                                                                     
       }                                                                                            
    }                                                               
}                                                              

namespace Lockstep.Game{                                                                                               
    public partial class Skill :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(CdTimer);
			writer.Write(_curPartIdx);
			writer.Write(skillTimer);
			writer.Write((int)(State));                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			CdTimer = reader.ReadLFloat();
			_curPartIdx = reader.ReadInt32();
			skillTimer = reader.ReadLFloat();
			State = (ESkillState)reader.ReadInt32();                                                                                     
       }                                                                                            
    }                                                               
}                                                              

namespace Lockstep.Game{                                                                                               
    public partial class Spawner :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(EntityId);
			writer.Write(PrefabId);
			writer.Write(_timer);
			Info.WriteBackup(writer);
			transform.WriteBackup(writer);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			EntityId = reader.ReadInt32();
			PrefabId = reader.ReadInt32();
			_timer = reader.ReadLFloat();
			Info.ReadBackup(reader);
			transform.ReadBackup(reader);                                                                                     
       }                                                                                            
    }                                                               
}                                                              

namespace Lockstep.Game{                                                                                               
    public partial class SpawnerInfo :IBackup{                                                                  
       public void WriteBackup(Serializer writer){                                           
			writer.Write(prefabId);
			writer.Write(spawnPoint);
			writer.Write(spawnTime);                                                                                     
       }                                                                                            
                                                                                                    
       public void ReadBackup(Deserializer reader){                                       
			prefabId = reader.ReadInt32();
			spawnPoint = reader.ReadLVector3();
			spawnTime = reader.ReadLFloat();                                                                                     
       }                                                                                            
    }                                                               
}                                                              
                                                                              
#endif                                                                                           
                                                                                              